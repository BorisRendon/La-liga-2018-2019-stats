shiny::runApp('LaLigaStats2018_2019')
require(shiny)
require(shinythemes)
require(DT)
require(tidyverse)
require(scales)
require(ggridges)
require(gridExtra)
require(extrafont)
## ui.R ##
library(shinythemes)
install.packages('shinythemes')
## ui.R ##
library(shinythemes)
fluidPage(theme = shinytheme("cerulean"),
...
)
runApp('LaLigaStats2018_2019')
shiny::runApp('LaLigaStats2018_2019')
## ui.R ##
library(shinythemes)
library(readr)
# equipos dataset
equipos <- read_delim("laliga_partidos_2018-2019.csv", ";")
nombres_equipos <- unique(equipos$AwayTeam)
setwd("D:/UFM/La-liga-2018-2019-stats/LaLigaStats2018_2019")
## ui.R ##
library(shinythemes)
library(readr)
# equipos dataset
equipos <- read_delim("laliga_partidos_2018-2019.csv", ";")
nombres_equipos <- unique(equipos$AwayTeam)
# jugadores dataset
jugadores <- read_delim("laliga_player_stats_spanish.csv", ";")
nombres_jugadores <- unique(jugadores$Nombre)
fluidPage(theme = shinytheme("united"),
mainPanel(
tabsetPanel(
tabPanel("Inicio",
# Numero de equipos y de jugadores
# Top 5 equipos con mas goles
# Top 5 mejores jugadores > en posiciones
# Campeon de la temporada 2018 - 2019
# Total de goles en la temporada
# Total de tarjetas amarillas y rojas en la temporada
),
# feature: comparar equipos y jugadores
tabPanel("Equipos",
br(),
sidebarPanel(
selectInput("equipos_select",
"Seleccionar equipo",
choices=nombres_equipos)
),
mainPanel(h2("Equipos"),
fluidRow("data"))
),
tabPanel("Jugadores",
br(),
sidebarPanel(
selectInput("equipos_select",
"Seleccionar jugador",
choices=nombres_jugadores)
),
mainPanel(h2("Jugadores"),
fluidRow("data"))
)
)
)
)
library(tidyverse)
runApp()
library(shiny)
library(ggplot2)
library(dplyr)
library(DT)
head(equipos)
output$grafica_ggplot <- renderPlot({
equipos %>%
ggplot(aes(x=HomeTeam,y=FTHG, color=color))+
geom_point()+
ylab("Precio")+
xlab("Kilates")+
ggtitle("Precio diamantes")
})
shinyServer(function(input, output) {
output$grafica_base_r <- renderPlot({
plot(mtcars$wt,mtcars$mpg,xlab="wt",ylab="Miler per Galon")
})
output$grafica_ggplot <- renderPlot({
equipos %>%
ggplot(aes(x=HomeTeam,y=FTHG, color=color))+
geom_point()+
ylab("Precio")+
xlab("Kilates")+
ggtitle("Precio diamantes")
})
})
runApp()
runApp()
nombres_equipos
equipos %>%
summarise(AwayTeam)
View(jugadores)
View(jugadores)
equipos %>%
summarise(AwayTeam)
runApp()
x <- equipos %>%
summarise(Cantidad_equipos = n_distinct(HomeTeam))
## ui.R ##
library(shinythemes)
library(readr)
library(tidyverse)
library(shiny)
x <- equipos %>%
summarise(Cantidad_equipos = n_distinct(HomeTeam))
datosxequipo <- jugadores %>%
select(Equipo,`Goles marcados`)
datosxequipo <- jugadores %>%
select(Nombre,`Goles marcados`)
datosxjugador <- jugadores %>%
select(Equipo,`Goles marcados`)
view(datosxjugador)
datosxequipo <- jugadores %>%
select(Equipo,`Goles marcados`) %>%
distinct_all(datosxequipo)
datosxequipo <- jugadores %>%
select(Equipo,`Goles marcados`) %>%
fluidPage(theme = shinytheme("united"),
mainPanel(
tabsetPanel(
tabPanel("Inicio",
h5("Hay un total de ",total_equipos , "equipos en LaLiga"),
h5("Hay un total de ",total_jugadores , "jugadores inscritos en LaLiga"),
# Numero de equipos y de jugadores //
# Top 5 equipos con mas goles
# Top 5 mejores jugadores > en posiciones
# Campeon de la temporada 2018 - 2019
# Total de goles en la temporada
# Total de tarjetas amarillas y rojas en la temporada
),
# feature: comparar equipos y jugadores
tabPanel("Equipos",
br(),
sidebarPanel(
selectInput("equipos_select",
"Seleccionar equipo",
choices=nombres_equipos)
),
mainPanel(h2("Equipos"),
fluidRow("data"))
),
tabPanel("Jugadores",
br(),
sidebarPanel(
selectInput("equipos_select",
"Seleccionar jugador",
choices=nombres_jugadores)
),
mainPanel(h2("Jugadores"),
fluidRow("data"))
)
)
)
)
datosxequipo <- jugadores %>%
select(Equipo,`Goles marcados`)
distinct_all(datosxequipo)
View(equipos)
total_golesaway <- equipos %>%
summarise(sum(equipos$FTHG))
View(total_golesaway)
total_goleshome <- equipos %>%
summarise(sum(equipos$FTAG))
total_goles <- total_golesaway + total_goleshome
runApp()
total_amarillas <- jugadores %>%
summarise(sum(jugadores$`Tarjetas amarillas`))
View(total_amarillas)
total_rojas <- jugadores %>%
summarise(sum(jugadores$`Tarjetas rojas`))
View(total_rojas)
total_amarillas <- jugadores %>%
summarise(sum(jugadores$`Tarjetas amarillas`))
runApp()
